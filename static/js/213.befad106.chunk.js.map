{"version":3,"file":"static/js/213.befad106.chunk.js","mappings":"mTAEaA,EAAM,mCACnBC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAAiDD,EACjDC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAQ,GAAD,OAAKF,IAGP,IAAMG,EAAW,mCAAG,+GAEAF,EAAAA,EAAAA,IAAA,uBAFA,uBAEfG,EAFe,EAEfA,KAFe,kBAGhBA,GAHgB,gCAKvBC,QAAQC,MAAR,MALuB,yDAAH,qDASXC,EAAe,mCAAG,WAAMC,GAAN,kGAEJP,EAAAA,EAAAA,IAAA,iBAAoBO,IAFhB,uBAEnBJ,EAFmB,EAEnBA,KAFmB,kBAGpBA,GAHoB,gCAK3BC,QAAQC,MAAR,MAL2B,yDAAH,sDASfG,EAAe,mCAAG,WAAMD,GAAN,kGAEJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aAFI,uBAEnBJ,EAFmB,EAEnBA,KAFmB,kBAGpBA,EAAKM,MAHe,gCAK3BL,QAAQC,MAAR,MAL2B,yDAAH,sDASfK,EAAe,mCAAG,WAAMH,GAAN,kGAEJP,EAAAA,EAAAA,IAAA,iBAAoBO,EAApB,aAFI,uBAEnBJ,EAFmB,EAEnBA,KAFmB,kBAGpBA,EAAKQ,SAHe,gCAK3BP,QAAQC,MAAR,MAL2B,yDAAH,sDASfO,EAAY,mCAAG,WAAMC,GAAN,kGAEDb,EAAAA,EAAAA,IAAA,gBAA2B,CAChDc,OAAQ,CACND,MAAOA,KAJa,uBAEhBV,EAFgB,EAEhBA,KAFgB,kBAOjBA,EAAKQ,SAPY,gCASxBP,QAAQC,MAAR,MATwB,yDAAH,qD,wLC3CZU,EAAsBC,EAAAA,EAAAA,IAAH,0CAInBC,EAAUD,EAAAA,EAAAA,IAAH,6DAKPE,EAAaF,EAAAA,EAAAA,GAAH,uEAKVG,EAAmBH,EAAAA,EAAAA,GAAH,gDAIhBI,EAAOJ,EAAAA,EAAAA,EAAH,yH,SCWjB,EAvByB,SAAC,GAAsB,IAApBK,EAAmB,EAAnBA,aAClBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAE5DC,EAAY,IAAIC,KAAKL,GAAcM,cACnCC,EAAYC,KAAKC,MAAMR,GAAcS,QAAQ,GAEnD,OACE,UAACnB,EAAD,YACE,gBAAKoB,IAAK,kCAAoCb,EAAac,IAAKb,KAChE,UAACN,EAAD,YACE,UAACC,EAAD,WACGK,EADH,IACWK,EADX,QAGA,UAACR,EAAD,0BAAmBW,MACnB,SAACZ,EAAD,wBACA,SAACC,EAAD,UAAOM,KACP,SAACP,EAAD,sBACA,SAACC,EAAD,UAAOO,GAAUA,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,aAI7D,EC1BYC,GAAazB,EAAAA,EAAAA,GAAO0B,EAAAA,GAAP1B,CAAH,gSCIvB,EAJmB,SAAC,GAAY,IAAV2B,EAAS,EAATA,GACpB,OAAO,SAACF,EAAD,CAAYE,GAAIA,EAAhB,oBACR,ECHYC,E,QAAa5B,GAAAA,GAAH,kI,UCgEvB,EA1DqB,WAAO,IAAD,IACzB,GAAwC6B,EAAAA,EAAAA,UAAS,IAAjD,eAAOxB,EAAP,KAAqByB,EAArB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOxC,EAAP,KAAc0C,EAAd,KACQxC,GAAYyC,EAAAA,EAAAA,MAAZzC,QAGF0C,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAwB7C,OAtBAC,EAAAA,EAAAA,YAAU,WACR,GAAK9C,EAAL,CAIA,IAAM+C,EAAiB,mCAAG,6GAEAC,EAAAA,GAAoBhD,GAFpB,UAEhBI,EAFgB,8BAIpB6C,EAAAA,GAAAA,MAAY,+DAJQ,0BAOtBV,EAAgBnC,GAPM,kDAStBoC,EAAS,EAAD,IACRS,EAAAA,GAAAA,MAAY,sDAVU,0DAAH,qDAcvBF,GAhBC,CAiBF,GAAE,CAAC/C,KAGF,4BACE,6BACE,SAAC,EAAD,CAAYoC,GAAIM,IACf5B,IAAgB,SAAC,EAAD,CAAkBA,aAAcA,QAEnD,4BACE,oDACA,UAACuB,EAAD,YACE,yBACE,SAAC,KAAD,CAAMD,GAAG,OAAOQ,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMN,GAAG,UAAUQ,MAAO,CAAEC,KAAMH,GAAlC,0BAKJ,SAAC,EAAAQ,SAAD,CAAUC,SAAU,QACpB,SAAC,KAAD,OAEDrD,IAAS,uBAAIA,EAAMsD,YAGzB,C","sources":["components/services/api.js","components/MovieDescription/MovieDescription.styled.jsx","components/MovieDescription/MovieDescription.jsx","components/ButtonBack/ButtonBack.styled.jsx","components/ButtonBack/ButtonBack.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const KEY = '500d9ce9bd19caed28c8e80a6fa70303';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.headers.common['Authorization'] = KEY;\naxios.defaults.params = {\n  api_key: `${KEY}`,\n};\n\nexport const getTrending = async () => {\n  try {\n    const { data } = await axios.get(`/trending/movie/day`);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const { data } = await axios.get(`/search/movie`, {\n      params: {\n        query: query,\n      },\n    });\n    return data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const MovieDescriptionBox = styled.div`\n  display: flex;\n`;\n\nexport const TextBox = styled.div`\n  display: block;\n  padding: 20px;\n`;\n\nexport const TitleMovie = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nexport const TitleDescription = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n  font-style: italic;\n  margin-bottom: 20px;\n\n  &:last-of-type {\n    margin-bottom: 0;\n  }\n`;\n","import {\n  MovieDescriptionBox,\n  TextBox,\n  TitleMovie,\n  Text,\n  TitleDescription,\n} from './MovieDescription.styled';\n\nconst MovieDescription = ({ movieDetails }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieDetails;\n  const movieYear = new Date(release_date).getFullYear();\n  const userScore = Math.round(vote_average).toFixed(1);\n\n  return (\n    <MovieDescriptionBox>\n      <img src={'https://image.tmdb.org/t/p/w300' + poster_path} alt={title} />\n      <TextBox>\n        <TitleMovie>\n          {title}({movieYear})\n        </TitleMovie>\n        <Text>User score: {userScore}</Text>\n        <TitleDescription>Overview</TitleDescription>\n        <Text>{overview}</Text>\n        <TitleDescription>Genres</TitleDescription>\n        <Text>{genres && genres.map(genre => genre.name).join(', ')}</Text>\n      </TextBox>\n    </MovieDescriptionBox>\n  );\n};\n\nexport default MovieDescription;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  width: 70px;\n  padding: 5px;\n\n  justify-content: center;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  background-color: #767573;\n  margin-bottom: 10px;\n\n  &:hover,\n  &:focus {\n    background-color: orange;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { StyledLink } from './ButtonBack.styled';\n\nconst ButtonBack = ({ to }) => {\n  return <StyledLink to={to}>Go Back</StyledLink>;\n};\n\nexport default ButtonBack;\n\nButtonBack.propTypes = {\n  to: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const DetailList = styled.ul`\n  margin-top: 30px;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n  padding: 10px;\n`;\n","import { toast } from 'react-toastify';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport MovieDescription from '../../components/MovieDescription/MovieDescription';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\nimport { DetailList } from './MovieDetails.styled';\nimport * as API from '../../components/services/api';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const renderMovieDetail = async () => {\n      try {\n        const results = await API.getMovieDetails(movieId);\n        if (!results) {\n          toast.error('Sorry, we don`t have information of this movie ðŸ˜“');\n          return;\n        }\n        setMovieDetails(results);\n      } catch (error) {\n        setError(error);\n        toast.error('Oops, something went wrong ðŸ«£ Try again!');\n      }\n    };\n\n    renderMovieDetail();\n  }, [movieId]);\n\n  return (\n    <div>\n      <main>\n        <ButtonBack to={backLinkHref} />\n        {movieDetails && <MovieDescription movieDetails={movieDetails} />}\n      </main>\n      <div>\n        <h2>Additional information</h2>\n        <DetailList>\n          <li>\n            <Link to=\"cast\" state={{ from: backLinkHref }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backLinkHref }}>\n              Review\n            </Link>\n          </li>\n        </DetailList>\n        <Suspense fallback={null} />\n        <Outlet />\n      </div>\n      {error && <p>{error.message}</p>}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["KEY","axios","api_key","getTrending","data","console","error","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","results","searchMovies","query","params","MovieDescriptionBox","styled","TextBox","TitleMovie","TitleDescription","Text","movieDetails","poster_path","title","release_date","vote_average","overview","genres","movieYear","Date","getFullYear","userScore","Math","round","toFixed","src","alt","map","genre","name","join","StyledLink","NavLink","to","DetailList","useState","setMovieDetails","setError","useParams","backLinkHref","useLocation","state","from","useEffect","renderMovieDetail","API","toast","Suspense","fallback","message"],"sourceRoot":""}